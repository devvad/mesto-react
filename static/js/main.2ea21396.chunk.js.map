{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","confing","this","_headers","headers","url","config","fetch","then","_checkError","res","ok","json","Promise","reject","status","_fetch","method","data","body","JSON","stringify","cardId","authorization","Card","card","onCardClick","onClick","link","name","type","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","api","getUserInfo","getInitialCards","user","about","avatar","catch","err","console","error","style","backgroundImage","map","Footer","PopupWithForm","isOpen","title","children","onClose","noValidate","ImagePopup","log","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","document","addEventListener","event","key","id","defaultValue","placeholder","minLength","maxLength","required","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ea21396.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fad4f8a5.svg\";","import logo from \"../images/logo.svg\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип сайта Mesto\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header","const baseUrl = \"https://mesto.nomoreparties.co/v1/cohort-26/\";\n\nclass Api {\n  constructor(confing) {\n    this._headers = confing.headers\n  }\n\n\t_fetch(url, config) {\n\t\treturn fetch(`${baseUrl}${url}`, {\n\t\t\theaders: this._headers,\n\t\t\t...config\n\t\t})\n\t\t.then(this._checkError);\n\t}\n\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  // Метод получения списка всех карточек пользователя:\n  getInitialCards() {\n    return this._fetch(\"cards\", {\n      method: 'GET',\n    })\n  }\n\n  // Метод получения информации о пользователе:\n  getUserInfo() {\n    return this._fetch(\"users/me\", {\n      method: 'GET',\n    })\n  }\n\n  // Метод обновления аватара:\n  newAvatar(data) {\n    return this._fetch(\"users/me/avatar\", {\n      method: 'PATCH',\n      body: JSON.stringify(data),\n    })\n  }\n\n  // Метод удаления карточки:\n  removeCard(cardId) {\n    return this._fetch(`cards/${cardId}`, {\n      method: 'DELETE',\n    })\n  }\n\n  // Метод простановки лайка у карточки:\n  putLike(cardId) {\n    return this._fetch(`cards/likes/${cardId}`, {\n      method: 'PUT',\n    })\n  }\n\n  // Метод удаления лайка у карточки:\n  removeLike(cardId) {\n    return this._fetch(`cards/likes/${cardId}`, {\n      method: 'DELETE',\n    })\n  }\n\n  // Метод обновления информации о пользователе:\n  addProfileInfo(data) {\n    return this._fetch(\"users/me\", {\n      method: 'PATCH',\n      body: JSON.stringify(data),\n    })\n  }\n\n  // Добавление новой карточки на сервер:\n  addCard(data) {\n  \treturn this._fetch(\"cards\", {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t});\n\t}\n}\n\nexport default new Api ({\n  url: `https://mesto.nomoreparties.co/v1/cohort-26/`,\n  headers: {\n    authorization: 'abead934-d5b0-49ba-afc0-24d630c67c1b',\n    'Content-Type': 'application/json'\n  }\n});","function Card({card, onCardClick}) {\n\treturn (\n    <li\n      className=\"card\"\n      onClick={() => {\n        onCardClick(card);\n      }}\n    >\n      <img className=\"card__image\" src={card.link} alt={card.name} />\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-number\">\n          <button type=\"button\" className=\"card__like\"></button>\n          <span className=\"card__likes-container\">{card.likes.length}</span>\n        </div>\n        <button type=\"button\" className=\"card__delete-icon\"></button>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import { useEffect, useState } from \"react\";\r\nimport api from \"../utils/api\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userDescription, setUserDescription] = useState(\"\");\r\n  const [userAvatar, setUserAvatar] = useState(\"\");\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userName) {\r\n      return;\r\n    }\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([user, cards]) => {\r\n        setUserName(user.name);\r\n        setUserDescription(user.about);\r\n        setUserAvatar(user.avatar);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div\r\n          className=\"profile__avatar\"\r\n          style={{ backgroundImage: `url(${userAvatar})` }}\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            onClick={onEditAvatar}\r\n            className=\"profile__overlay\"\r\n          />\r\n        </div>\r\n        <div className=\"profile__user\">\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__title\">{userName}</h1>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onEditProfile}\r\n              className=\"profile__edit-button\"\r\n            />\r\n          </div>\r\n          <p className=\"profile__subtitle\">{userDescription}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onAddPlace}\r\n          className=\"profile__add-button\"\r\n        />\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((data) => {\r\n            return <Card card={data} onCardClick={onCardClick} />;\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">© 2021 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer","function PopupWithForm ({isOpen, name, title, children, onClose}) {\r\n\treturn (\r\n    <div className={isOpen ? `popup popup_type_${name} popup_opened` : `popup popup_type_${name}`} onClick={onClose}>\r\n      <div className=\"popup__container\">\r\n        <h2 className=\"popup__name\">{title}</h2>\r\n\t\t\t\t<form className=\"popup__form\" name={name} noValidate>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</form>\r\n        <button type=\"button\" className=\"popup__closed\" onClick={onClose} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm","function ImagePopup({ card, onClose }) {\r\n\tconsole.log(card);\r\n\treturn (\r\n    <div\r\n      className={`popup popup_gallery ${card ? \"popup_opened\" : \"\"}`}\r\n      onClick={() => {\r\n        onClose();\r\n      }}\r\n    >\r\n      {card && <div className=\"popup__preview\">\r\n        <figure className=\"popup__figure\">\r\n          <img className=\"popup__image\" src={card.link} alt={card.name} />\r\n          <figcaption className=\"popup__figcaption\">{card.name}</figcaption>\r\n        </figure>\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__closed\"\r\n          onClick={() => {\r\n            onClose();\r\n          }}\r\n        />\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup","import Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\"\r\nimport PopupWithForm from \"./PopupWithForm\"\r\nimport ImagePopup from \"./ImagePopup\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nfunction App() {\r\n\tconst [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n\tconst [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  const handleEditAvatarClick = () => {\r\n\t\tsetIsEditAvatarPopupOpen(!isEditAvatarPopupOpen)\r\n  };\r\n\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen)\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen)\r\n  };\r\n\r\n\tconst handleCardClick = (card) => {\r\n\t\tsetSelectedCard(card)\r\n\t};\r\n\r\n\tconst closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n\t\tsetSelectedCard(null)\r\n  }\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"keydown\", (event) => {\r\n\t\t\tif (event.key === \"Escape\") {\r\n\t\t\t\tsetSelectedCard(null);\r\n\t\t\t\tsetIsEditAvatarPopupOpen(false)\r\n    \t\tsetIsEditProfilePopupOpen(false)\r\n    \t\tsetIsAddPlacePopupOpen(false)\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\r\n\treturn (\r\n    <>\r\n      <Header></Header>\r\n      <Main\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n      ></Main>\r\n      <Footer></Footer>\r\n\r\n      <PopupWithForm\r\n        title=\"Редактирование профиля\"\r\n        name=\"profile\"\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          name=\"name\"\r\n          id=\"input-popup-title\"\r\n          defaultValue\r\n          placeholder=\"Имя\"\r\n          minLength={2}\r\n          maxLength={40}\r\n          required\r\n        />\r\n        <span className=\"popup__error-message input-popup-title-error\" />\r\n        <input\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          name=\"about\"\r\n          id=\"input-popup-subtitle\"\r\n          defaultValue\r\n          placeholder=\"Вид деятельности\"\r\n          minLength={2}\r\n          maxLength={200}\r\n          required\r\n        />\r\n        <span className=\"popup__error-message input-popup-subtitle-error\" />\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          Сохранить\r\n        </button>\r\n      </PopupWithForm>\r\n\r\n      <PopupWithForm\r\n        title=\"Новое место\"\r\n        name=\"place\"\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          id=\"card-name\"\r\n          name=\"name\"\r\n          className=\"popup__input popup__input_type_name\"\r\n          placeholder=\"Название\"\r\n          minLength={2}\r\n          maxLength={30}\r\n          required\r\n        />\r\n        <span className=\"popup__error-message card-name-error\" />\r\n        <input\r\n          type=\"URL\"\r\n          id=\"link\"\r\n          name=\"link\"\r\n          className=\"popup__input popup__input_type_link-url\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n        />\r\n        <span className=\"popup__error-message link-error\" />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"popup__button popup__button_disabled\"\r\n          disabled\r\n          aria-label=\"Добавить место\"\r\n        >\r\n          Создать\r\n        </button>\r\n      </PopupWithForm>\r\n\r\n      <ImagePopup\r\n\t\t\t\tcard={selectedCard}\r\n\t\t\t\tonClose={() => {\r\n\t\t\t\t\tcloseAllPopups();\r\n\t\t\t\t}}\r\n\t\t\t></ImagePopup>\r\n\r\n      <PopupWithForm title=\"Вы уверены?\" name=\"confirm\">\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          Да\r\n        </button>\r\n      </PopupWithForm>\r\n\r\n      <PopupWithForm\r\n        title=\"Обновить аватар\"\r\n        name=\"avatar\"\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <input\r\n          type=\"url\"\r\n          className=\"popup__input\"\r\n          name=\"avatar\"\r\n          id=\"input-popup-avatar\"\r\n          defaultValue\r\n          placeholder=\"Ссылка на аватар\"\r\n          required\r\n        />\r\n        <span className=\"input-popup-avatar-error popup__error-message\" />\r\n        <button type=\"submit\" className=\"popup__button\" id=\"newAvatar\">\r\n          Сохранить\r\n        </button>\r\n      </PopupWithForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}